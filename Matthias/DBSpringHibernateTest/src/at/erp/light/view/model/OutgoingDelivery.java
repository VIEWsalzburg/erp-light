package at.erp.light.view.model;

// Generated 24.11.2014 20:09:12 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * OutgoingDelivery generated by hbm2java
 */
@Entity
@Table(name = "outgoing_delivery", schema = "public")
public class OutgoingDelivery implements java.io.Serializable {

	private int outgoingDeliveryId;
	private DeliveryList deliveryList;
	private Organisation organisation;
	private Person person;
	private Integer deliveryNr;
	private Date date;
	private String comment;
	private Set<OutgoingArticle> outgoingArticles = new HashSet<OutgoingArticle>(
			0);

	public OutgoingDelivery() {
	}

	public OutgoingDelivery(int outgoingDeliveryId, Organisation organisation,
			Person person, Date date, String comment) {
		this.outgoingDeliveryId = outgoingDeliveryId;
		this.organisation = organisation;
		this.person = person;
		this.date = date;
		this.comment = comment;
	}

	public OutgoingDelivery(int outgoingDeliveryId, DeliveryList deliveryList,
			Organisation organisation, Person person, Integer deliveryNr,
			Date date, String comment, Set<OutgoingArticle> outgoingArticles) {
		this.outgoingDeliveryId = outgoingDeliveryId;
		this.deliveryList = deliveryList;
		this.organisation = organisation;
		this.person = person;
		this.deliveryNr = deliveryNr;
		this.date = date;
		this.comment = comment;
		this.outgoingArticles = outgoingArticles;
	}

	@Id
	@Column(name = "outgoing_delivery_id", unique = true, nullable = false)
	public int getOutgoingDeliveryId() {
		return this.outgoingDeliveryId;
	}

	public void setOutgoingDeliveryId(int outgoingDeliveryId) {
		this.outgoingDeliveryId = outgoingDeliveryId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "delivery_list_id")
	public DeliveryList getDeliveryList() {
		return this.deliveryList;
	}

	public void setDeliveryList(DeliveryList deliveryList) {
		this.deliveryList = deliveryList;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "organisation_id", nullable = false)
	public Organisation getOrganisation() {
		return this.organisation;
	}

	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "person_id", nullable = false)
	public Person getPerson() {
		return this.person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	@Column(name = "delivery_nr")
	public Integer getDeliveryNr() {
		return this.deliveryNr;
	}

	public void setDeliveryNr(Integer deliveryNr) {
		this.deliveryNr = deliveryNr;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date", nullable = false, length = 13)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "comment", nullable = false, length = 1000)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "outgoingDelivery")
	public Set<OutgoingArticle> getOutgoingArticles() {
		return this.outgoingArticles;
	}

	public void setOutgoingArticles(Set<OutgoingArticle> outgoingArticles) {
		this.outgoingArticles = outgoingArticles;
	}

}
