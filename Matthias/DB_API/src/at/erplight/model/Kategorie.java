package at.erplight.model;

// Generated 14.11.2014 00:05:19 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Kategorie generated by hbm2java
 */
@Entity
@Table(name = "kategorie", schema = "public")
public class Kategorie implements java.io.Serializable {

	private int kategorieId;
	private String kategoriename;
	private String kategoriebeschreibung;
	private Set<Organisation> organisations = new HashSet<Organisation>(0);

	public Kategorie() {
	}

	public Kategorie(int kategorieId, String kategoriename,
			String kategoriebeschreibung) {
		this.kategorieId = kategorieId;
		this.kategoriename = kategoriename;
		this.kategoriebeschreibung = kategoriebeschreibung;
	}

	public Kategorie(int kategorieId, String kategoriename,
			String kategoriebeschreibung, Set<Organisation> organisations) {
		this.kategorieId = kategorieId;
		this.kategoriename = kategoriename;
		this.kategoriebeschreibung = kategoriebeschreibung;
		this.organisations = organisations;
	}

	@Id
	@Column(name = "kategorie_id", unique = true, nullable = false)
	public int getKategorieId() {
		return this.kategorieId;
	}

	public void setKategorieId(int kategorieId) {
		this.kategorieId = kategorieId;
	}

	@Column(name = "kategoriename", nullable = false, length = 100)
	public String getKategoriename() {
		return this.kategoriename;
	}

	public void setKategoriename(String kategoriename) {
		this.kategoriename = kategoriename;
	}

	@Column(name = "kategoriebeschreibung", nullable = false, length = 1024)
	public String getKategoriebeschreibung() {
		return this.kategoriebeschreibung;
	}

	public void setKategoriebeschreibung(String kategoriebeschreibung) {
		this.kategoriebeschreibung = kategoriebeschreibung;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "hat_kategorie", schema = "public", joinColumns = { @JoinColumn(name = "kategorie_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "org_id", nullable = false, updatable = false) })
	public Set<Organisation> getOrganisations() {
		return this.organisations;
	}

	public void setOrganisations(Set<Organisation> organisations) {
		this.organisations = organisations;
	}

}
