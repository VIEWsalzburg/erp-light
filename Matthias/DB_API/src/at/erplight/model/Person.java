package at.erplight.model;

// Generated 13.11.2014 22:13:18 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Person generated by hbm2java
 */
@Entity
@Table(name = "person", schema = "public")
public class Person implements java.io.Serializable {

	private int personId;
	private Ort ort;
	private Organisation organisation;
	private Rechte rechte;
	private Person person;
	private Land land;
	private Adresse adresse;
	private String anrede;
	private String titel;
	private String vorname;
	private String nachname;
	private String bemerkung;
	private Date aktualisierungsdatum;
	private Set<Typ> typs = new HashSet<Typ>(0);
	private Set<Person> persons = new HashSet<Person>(0);
	private Set<EingangsLieferung> eingangsLieferungs = new HashSet<EingangsLieferung>(
			0);
	private Set<Lieferliste> lieferlistes = new HashSet<Lieferliste>(0);
	private Set<Telefon> telefons = new HashSet<Telefon>(0);
	private Set<Organisation> organisations = new HashSet<Organisation>(0);
	private Set<Email> emails = new HashSet<Email>(0);
	private Set<Kundenlieferung> kundenlieferungs = new HashSet<Kundenlieferung>(
			0);

	public Person() {
	}

	public Person(int personId, String anrede, String titel, String vorname,
			String nachname, String bemerkung, Date aktualisierungsdatum) {
		this.personId = personId;
		this.anrede = anrede;
		this.titel = titel;
		this.vorname = vorname;
		this.nachname = nachname;
		this.bemerkung = bemerkung;
		this.aktualisierungsdatum = aktualisierungsdatum;
	}

	public Person(int personId, Ort ort, Organisation organisation,
			Rechte rechte, Person person, Land land, Adresse adresse,
			String anrede, String titel, String vorname, String nachname,
			String bemerkung, Date aktualisierungsdatum, Set<Typ> typs,
			Set<Person> persons, Set<EingangsLieferung> eingangsLieferungs,
			Set<Lieferliste> lieferlistes, Set<Telefon> telefons,
			Set<Organisation> organisations, Set<Email> emails,
			Set<Kundenlieferung> kundenlieferungs) {
		this.personId = personId;
		this.ort = ort;
		this.organisation = organisation;
		this.rechte = rechte;
		this.person = person;
		this.land = land;
		this.adresse = adresse;
		this.anrede = anrede;
		this.titel = titel;
		this.vorname = vorname;
		this.nachname = nachname;
		this.bemerkung = bemerkung;
		this.aktualisierungsdatum = aktualisierungsdatum;
		this.typs = typs;
		this.persons = persons;
		this.eingangsLieferungs = eingangsLieferungs;
		this.lieferlistes = lieferlistes;
		this.telefons = telefons;
		this.organisations = organisations;
		this.emails = emails;
		this.kundenlieferungs = kundenlieferungs;
	}

	@Id
	@Column(name = "person_id", unique = true, nullable = false)
	public int getPersonId() {
		return this.personId;
	}

	public void setPersonId(int personId) {
		this.personId = personId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ort_id")
	public Ort getOrt() {
		return this.ort;
	}

	public void setOrt(Ort ort) {
		this.ort = ort;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "org_id")
	public Organisation getOrganisation() {
		return this.organisation;
	}

	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rechte_id")
	public Rechte getRechte() {
		return this.rechte;
	}

	public void setRechte(Rechte rechte) {
		this.rechte = rechte;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "per_person_id")
	public Person getPerson() {
		return this.person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "land_id")
	public Land getLand() {
		return this.land;
	}

	public void setLand(Land land) {
		this.land = land;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "adresse_id")
	public Adresse getAdresse() {
		return this.adresse;
	}

	public void setAdresse(Adresse adresse) {
		this.adresse = adresse;
	}

	@Column(name = "anrede", nullable = false, length = 10)
	public String getAnrede() {
		return this.anrede;
	}

	public void setAnrede(String anrede) {
		this.anrede = anrede;
	}

	@Column(name = "titel", nullable = false, length = 10)
	public String getTitel() {
		return this.titel;
	}

	public void setTitel(String titel) {
		this.titel = titel;
	}

	@Column(name = "vorname", nullable = false, length = 100)
	public String getVorname() {
		return this.vorname;
	}

	public void setVorname(String vorname) {
		this.vorname = vorname;
	}

	@Column(name = "nachname", nullable = false, length = 100)
	public String getNachname() {
		return this.nachname;
	}

	public void setNachname(String nachname) {
		this.nachname = nachname;
	}

	@Column(name = "bemerkung", nullable = false, length = 1000)
	public String getBemerkung() {
		return this.bemerkung;
	}

	public void setBemerkung(String bemerkung) {
		this.bemerkung = bemerkung;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "aktualisierungsdatum", nullable = false, length = 29)
	public Date getAktualisierungsdatum() {
		return this.aktualisierungsdatum;
	}

	public void setAktualisierungsdatum(Date aktualisierungsdatum) {
		this.aktualisierungsdatum = aktualisierungsdatum;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "hat_person_typ", schema = "public", joinColumns = { @JoinColumn(name = "person_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "typ_id", nullable = false, updatable = false) })
	public Set<Typ> getTyps() {
		return this.typs;
	}

	public void setTyps(Set<Typ> typs) {
		this.typs = typs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Person> getPersons() {
		return this.persons;
	}

	public void setPersons(Set<Person> persons) {
		this.persons = persons;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<EingangsLieferung> getEingangsLieferungs() {
		return this.eingangsLieferungs;
	}

	public void setEingangsLieferungs(Set<EingangsLieferung> eingangsLieferungs) {
		this.eingangsLieferungs = eingangsLieferungs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Lieferliste> getLieferlistes() {
		return this.lieferlistes;
	}

	public void setLieferlistes(Set<Lieferliste> lieferlistes) {
		this.lieferlistes = lieferlistes;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "hat_telefon", schema = "public", joinColumns = { @JoinColumn(name = "person_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "telefon_id", nullable = false, updatable = false) })
	public Set<Telefon> getTelefons() {
		return this.telefons;
	}

	public void setTelefons(Set<Telefon> telefons) {
		this.telefons = telefons;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Organisation> getOrganisations() {
		return this.organisations;
	}

	public void setOrganisations(Set<Organisation> organisations) {
		this.organisations = organisations;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "hat_email", schema = "public", joinColumns = { @JoinColumn(name = "person_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "email_id", nullable = false, updatable = false) })
	public Set<Email> getEmails() {
		return this.emails;
	}

	public void setEmails(Set<Email> emails) {
		this.emails = emails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "person")
	public Set<Kundenlieferung> getKundenlieferungs() {
		return this.kundenlieferungs;
	}

	public void setKundenlieferungs(Set<Kundenlieferung> kundenlieferungs) {
		this.kundenlieferungs = kundenlieferungs;
	}

}
